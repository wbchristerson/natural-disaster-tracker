{"version":3,"sources":["views/dashboard/Dashboard.js"],"names":["Dashboard","props","d","Date","state","totalDisasters","disasterList","page","recordedSeconds","getSeconds","searchString","backEndHost","getBackEndHost","frontEndHost","getFrontEndHost","this","fetchDisasters","fetch","headers","then","response","json","result","setState","total_disasters","disasters","catch","e","console","log","evt","target","value","fetchDisastersWithSearch","newPage","Math","max","className","placeholder","size","onChange","onSearchStringChange","bind","color","onClick","onSearchClick","type","href","length","map","disaster","index","disasterDisplayData","getDisasterDisplayDataList","xs","is_ongoing","action","active","informal_name","official_name","random_observer_url","src","random_witness_image","alt","random_comment","random_observer","display","subIndex","md","id","align","activePage","pages","ceil","PAGE_SIZE","onActivePageChange","onSetCurrentPage","React","Component"],"mappings":"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","file":"static/js/10.9ce5db7a.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CBadge,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CForm,\n  CInput,\n  CPagination,\n  CListGroup,\n  CListGroupItem,\n  CLabel,\n} from '@coreui/react'\nimport { getBackEndHost, getDisasterDisplayDataList, getFrontEndHost, PAGE_SIZE } from '../../Utilities'\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    const d = new Date();\n    this.state = {\n      totalDisasters: 0,\n      disasterList: [],\n      page: 1,\n      recordedSeconds: d.getSeconds(),\n\n      searchString: \"\",\n    };\n\n    this.backEndHost = getBackEndHost();\n    this.frontEndHost = getFrontEndHost();\n  }\n\n  componentDidMount() {\n    this.fetchDisasters(1);\n  }\n\n  fetchDisasters(page) {\n    fetch(`${this.backEndHost}/api/disasters?page=${page}`, { headers: { 'Access-Control-Allow-Origin': '*' } })\n    .then(response => response.json())\n    .then(result => {\n        this.setState({\n          totalDisasters: result.total_disasters,\n          disasterList: result.disasters,\n        })\n    })\n    .catch(e => {\n        console.log(e);\n    });\n  }\n\n  onSearchStringChange(evt) {\n    this.setState({\n      searchString: evt.target.value,\n    })\n  }\n\n  onSearchClick() {\n    const {searchString} = this.state;\n    if (searchString == \"\") {\n      this.fetchDisasters(1);\n      this.setState({\n        page: 1,\n      });\n    } else {\n      this.fetchDisastersWithSearch(searchString, 1);\n    }\n  }\n\n  fetchDisastersWithSearch(searchString, page) {\n    fetch(`${this.backEndHost}/api/disasters?page=${page}&query=${searchString}`, { headers: { 'Access-Control-Allow-Origin': '*' } })\n    .then(response => response.json())\n    .then(result => {\n        this.setState({\n          totalDisasters: result.total_disasters,\n          disasterList: result.disasters,\n          page: page,\n        });\n    })\n    .catch(e => {\n        console.log(e);\n    });\n  }\n\n  onSetCurrentPage(evt) {\n    const newPage = Math.max(1, evt);\n    this.setState({\n      page: newPage,\n    });\n    const {searchString} = this.state;\n    if (searchString == \"\") {\n      this.fetchDisasters(newPage);\n    } else {\n      this.fetchDisastersWithSearch(searchString, newPage);\n    }\n  }\n\n  render() {\n    const {recordedSeconds, searchString, disasterList, page, totalDisasters} = this.state;\n    return (\n      <>\n        <div className={`my-test ${recordedSeconds % 3 === 0 ? \"main-image-1\" : recordedSeconds % 3 === 1 ? \"main-image-2\" : \"main-image-3\"}`}>\n          <div className=\"card-overlay\">\n            <h1 className=\"display-3 main-top-text\">Disaster Reporter</h1>\n            <p className=\"main-bottom-text\">See And Write Reports About Natural Disasters In Your Area</p>\n          </div>\n        </div>\n        <div className=\"dashboard-centered-entity single-disaster-card\">\n          <div className=\"dashboard-search-container\">\n            <CInput\n              className=\"top-search-field\"\n              placeholder=\"Search\"\n              size=\"lg\"\n              value={searchString}\n              onChange={this.onSearchStringChange.bind(this)}\n            />\n            <CButton color=\"primary\" onClick={() => this.onSearchClick(1)} className=\"btn btn-primary btn-block top-search-button\" type=\"submit\">Search</CButton>\n          </div>\n          <div className=\"logged-in-box auth0-box logged-in add-disaster-button single-disaster-card\">\n            <a className=\"btn btn-primary btn-lg btn-logout btn-block\" href={`${this.frontEndHost}/#/add-disaster-event`}>Add Disaster Event</a>\n          </div>\n        </div>\n\n        {disasterList.length == 0 && <h3 className=\"no-search-match-text\">No matching disasters</h3>}\n\n        {disasterList.map((disaster, index) => {\n          const disasterDisplayData = getDisasterDisplayDataList(disaster);\n          console.log(disaster);\n          return (\n            <CRow key={index} className=\"single-disaster-container\">\n              <CCol xs=\"12\" className=\"single-disaster-card\">\n                <CCard>\n                  <CCardHeader className=\"disaster-header\">\n                    <CListGroup>\n                      <div className=\"card-header-actions\">\n                        <CBadge className=\"mr-1 float-right\" color={`${disaster.is_ongoing ? \"danger\" : \"success\"}`}>{`${disaster.is_ongoing ? \"On-Going\" : \"Not On-Going\"}`}</CBadge>\n                      </div>\n                      <CListGroupItem action active>\n                        <div className=\"individual-disaster-header-block\">\n                          <h2>{disaster.informal_name}</h2>\n                          <h2>{disaster.official_name}</h2>\n                        </div>\n                        <div className=\"individual-disaster-header-block\">\n                          <h6>Informal Name</h6>\n                          <h6>Official Name</h6>\n                        </div>\n                      </CListGroupItem>\n                    </CListGroup>\n                    \n                  </CCardHeader>\n                  <CCardBody className=\"disaster-card-body\">\n                    {disaster.random_observer_url && <img className=\"d-block w-100 set-disaster-max-height\" src={disaster.random_witness_image} alt=\"slide 1\"/>}\n                    {disaster.random_comment && <h3 className=\"witness-quote-statement\">{`\"${disaster.random_comment}\"`}</h3>}\n                    {disaster.random_comment && \n                      <div className=\"witness-quote-author\">\n                        <div className=\"c-avatar\">\n                          <img src={disaster.random_observer_url} className=\"c-avatar-img\" alt={\"\"} />\n                        </div>\n                        {disaster.random_comment && <h5 className=\"disaster-author-text\">{disaster.random_observer}</h5>}\n                      </div>\n                    }\n                    <CForm className=\"disaster-details-block\">\n                      {disasterDisplayData.map((display, subIndex) => (\n                        <div key={subIndex} className=\"disaster-display\">\n                          <CCol md=\"3\" className=\"disaster-data-text\">\n                            <CLabel>{display[0]}</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"9\">\n                            <p className=\"disaster-data-text\">{display[1]}</p>\n                          </CCol>\n                        </div>\n                      ))}\n                    </CForm>\n\n                    <div className=\"button-row disaster-button-block\">\n                      <div className=\"auth0-box\">\n                        <a className=\"btn btn-primary\" href={`${this.frontEndHost}/#/single-disaster-display?id=${disaster.id}`}>View Witness Reports</a>\n                      </div>\n                      <div className=\"auth0-box\">\n                        <a className=\"btn btn-primary\" href={`${this.frontEndHost}/#/edit-disaster-event?id=${disaster.id}`}>Edit Disaster</a>\n                      </div>\n                    </div>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          )\n        })}\n\n        <CPagination\n          align=\"center\"\n          activePage={page}\n          pages={Math.ceil(totalDisasters / PAGE_SIZE)}\n          onActivePageChange={this.onSetCurrentPage.bind(this)}\n        />\n      </>\n    )\n  }\n}\n\nexport default Dashboard\n"],"sourceRoot":""}