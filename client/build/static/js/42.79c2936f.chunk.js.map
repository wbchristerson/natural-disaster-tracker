{"version":3,"sources":["views/added-pages/AddDisaster.js"],"names":["AddDisaster","props","state","informalName","officialName","disasterType","isOngoing","latitude","longitude","isModalOpen","authorizationFailure","showToast","backEndHost","getBackEndHost","frontEndHost","getFrontEndHost","evt","this","setState","target","value","test","parseFloat","fetch","method","body","JSON","stringify","informal_name","official_name","disaster_type","is_ongoing","location_latitude","location_longitude","contentType","headers","getCookieWithKey","USER_ACCESS_TOKEN_KEY","then","data","status","statusText","catch","error","console","log","xs","className","getAdminPrivilegeWarningMessage","action","encType","row","md","htmlFor","id","name","placeholder","onChange","onInformalNameChange","bind","onOfficialNameChange","custom","onDisasterTypeChange","DISASTER_TYPES","map","disaster","tag","sm","color","shape","checked","onIsOngoingChange","type","onLatitudeChange","onLongitudeChange","size","onClick","onSubmit","resetDisasterForm","show","onClose","onModalClose","closeButton","getAdminPrivilegeErrorMessage","position","autohide","fade","React","Component"],"mappings":"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","file":"static/js/42.79c2936f.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow,\n  CSwitch,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CToast,\n  CToastHeader,\n  CToastBody,\n  CToaster\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { getCookieWithKey, USER_ACCESS_TOKEN_KEY, getBackEndHost, getFrontEndHost, DISASTER_TYPES, getAdminPrivilegeErrorMessage, getAdminPrivilegeWarningMessage } from 'src/Utilities';\nimport { nominalTypeHack } from 'prop-types';\n\n\nclass AddDisaster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      informalName: \"\",\n      officialName: \"\",\n      disasterType: \"\",\n      isOngoing: false,\n      latitude: \"\",\n      longitude: \"\",\n\n      isModalOpen: false,\n      authorizationFailure: null, // an error code, either 401, 403, or null\n      showToast: false,\n    };\n    this.backEndHost = getBackEndHost();\n    this.frontEndHost = getFrontEndHost();\n  }\n\n  onInformalNameChange(evt) {\n    this.setState({ informalName: evt.target.value });\n  }\n\n  onOfficialNameChange(evt) {\n    this.setState({ officialName: evt.target.value });\n  }\n\n  onDisasterTypeChange(evt) {\n    this.setState({ disasterType: evt.target.value });\n  }\n\n  onIsOngoingChange(evt) {\n    this.setState({ isOngoing: !this.state.isOngoing });\n  }\n\n  onLatitudeChange(evt) {\n    const latitudeRegExp = /^-?\\d*\\.?\\d*$/;\n    if (latitudeRegExp.test(evt.target.value) && parseFloat(evt.target.value) >= -180.0 && parseFloat(evt.target.value) <= 180.0) {\n      this.setState({ latitude: evt.target.value });\n    } else if (evt.target.value == \"\") {\n      this.setState({ latitude: \"\" });\n    } else if (evt.target.value == \"-\") {\n      this.setState({ latitude: \"-\" });\n    }\n  }\n\n  onLongitudeChange(evt) {\n    const longitudeRegExp = /^-?\\d*\\.?\\d*$/;\n    if (longitudeRegExp.test(evt.target.value) && parseFloat(evt.target.value) >= -180.0 && parseFloat(evt.target.value) <= 180.0) {\n      this.setState({ longitude: evt.target.value });\n    } else if (evt.target.value == \"\") {\n      this.setState({ longitude: \"\" });\n    } else if (evt.target.value == \"-\") {\n      this.setState({ longitude: \"-\" });\n    }\n  }\n\n  onSubmit() {\n    this.setState({\n      showToast: false,\n    });\n    fetch(`${this.backEndHost}/api/disasters`,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          informal_name: this.state.informalName,\n          official_name: this.state.officialName,\n          disaster_type: this.state.disasterType,\n          is_ongoing: this.state.isOngoing,\n          location_latitude: this.state.latitude,\n          location_longitude: this.state.longitude,\n        }),\n        contentType: 'application/json',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + getCookieWithKey(USER_ACCESS_TOKEN_KEY),\n        }\n      }\n    )\n    .then(data => {\n      if ((data.status == 401 && data.statusText == \"UNAUTHORIZED\") || (data.status == 403 && data.statusText == \"FORBIDDEN\")) {\n        this.setState({\n          isModalOpen: true,\n          authorizationFailure: data.status,\n        });\n      } else if (data.status == 200) {\n        this.setState({\n          showToast: true,\n        });\n      }\n    })\n    .catch(error => console.log(\"error!!!: \", error));\n  }\n\n  resetDisasterForm() {\n    this.setState({\n      informalName: \"\",\n      officialName: \"\",\n      disasterType: \"\",\n      isOngoing: false,\n      latitude: \"\",\n      longitude: \"\",\n    });\n  }\n\n  onModalClose() {\n    this.setState({\n      isModalOpen: false,\n      authorizationFailure: null,\n    });\n  }\n\n  render() {\n    const {isModalOpen, authorizationFailure, showToast, informalName} = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\">\n            <CCard>\n              <CCardHeader>\n                <h4>Add Disaster Listing</h4>\n                <div className=\"top-information-text\">{getAdminPrivilegeWarningMessage(\"add disaster listings\")}</div>\n              </CCardHeader>\n              <CCardBody>\n                \n                <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Informal Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Text\" value={this.state.informalName} onChange={this.onInformalNameChange.bind(this)}/>\n                      <CFormText>The colloquial name of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Official Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Text\" value={this.state.officialName} onChange={this.onOfficialNameChange.bind(this)}/>\n                      <CFormText>The identifying name of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"select\">Disaster Type</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CSelect custom name=\"select\" id=\"select\" value={this.state.disasterType} onChange={this.onDisasterTypeChange.bind(this)}>\n                        {DISASTER_TYPES.map(disaster => <option key={disaster} value={disaster}>{disaster}</option>)}\n                      </CSelect>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol tag=\"label\" sm=\"3\" className=\"col-form-label\">\n                      Disaster Ongoing\n                    </CCol>\n                    <CCol sm=\"1\">\n                      <CSwitch\n                        id=\"add-disaster-ongoing-switch\"\n                        className=\"mr-1\"\n                        color=\"danger\"\n                        // defaultChecked\n                        shape=\"pill\"\n                        checked={this.state.isOngoing}\n                        onChange={this.onIsOngoingChange.bind(this)}\n                      />\n                    </CCol>\n                    <CCol sm=\"3\">\n                      <CLabel htmlFor=\"add-disaster-ongoing-switch\">{this.state.isOngoing ? \"Yes\" : \"No\"}</CLabel>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"email-input\">Latitude</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Disaster Latitude\" value={this.state.latitude} onChange={this.onLatitudeChange.bind(this)}/>\n                      <CFormText className=\"help-block\">The latitude of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"email-input\">Longitude</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Disaster Latitude\" value={this.state.longitude} onChange={this.onLongitudeChange.bind(this)}/>\n                      <CFormText className=\"help-block\">The longitude of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.onSubmit.bind(this)}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\n                <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.resetDisasterForm.bind(this)}><CIcon name=\"cil-ban\" /> Reset</CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n        <CModal show={isModalOpen} onClose={this.onModalClose.bind(this)}>\n          <CModalHeader closeButton>\n            <CModalTitle>Failure To Create Disaster Listing</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {getAdminPrivilegeErrorMessage(\"add disaster listings\", authorizationFailure)}\n          </CModalBody>\n          <CModalFooter>\n            <CButton \n              color=\"secondary\" \n              onClick={() => this.onModalClose()}\n            >OK</CButton>\n          </CModalFooter>\n        </CModal>\n        \n        <CToaster\n          position={'top-center'}\n          key={'toaster-top-center'}\n        >\n          <CToast\n            key={'toast'}\n            show={showToast}\n            autohide={5000}\n            fade={true}\n          >\n            <CToastHeader closeButton={true}>\n              Disaster Listing Added\n            </CToastHeader>\n            <CToastBody>\n              {`The disaster listing for ${informalName} has been added successfully!`}\n            </CToastBody>\n          </CToast>\n        </CToaster>\n      </>\n    );\n  }\n}\n\nexport default AddDisaster;"],"sourceRoot":""}