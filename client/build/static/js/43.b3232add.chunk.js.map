{"version":3,"sources":["views/added-pages/EditDisaster.js"],"names":["EditDisaster","props","state","informalName","officialName","disasterType","isOngoing","latitude","longitude","isValidInformalName","isValidOfficialName","isValidDisasterType","isValidLatitude","isValidLongitude","isModalOpen","authorizationFailure","showToast","backEndHost","getBackEndHost","frontEndHost","getFrontEndHost","disasterId","parseInt","location","search","substring","originalInformalName","originalOfficialName","originalDisasterType","originalIsOngoing","originalLatitude","originalLongitude","fetch","this","then","response","json","result","setState","informal_name","official_name","disaster_type","charAt","toUpperCase","slice","is_ongoing","toString","catch","e","console","log","evt","target","value","isValidGeographicCoordinate","rawBody","id","trim","toLowerCase","location_latitude","location_longitude","method","body","JSON","stringify","contentType","headers","getCookieWithKey","USER_ACCESS_TOKEN_KEY","error","message","success","xs","className","getAdminPrivilegeWarningMessage","action","encType","row","md","htmlFor","name","placeholder","onChange","onInformalNameChange","bind","invalid","onOfficialNameChange","custom","onDisasterTypeChange","DISASTER_TYPES","map","disaster","disasterTypes","tag","sm","color","shape","checked","onIsOngoingChange","type","onLatitudeChange","onLongitudeChange","size","onClick","onSubmit","resetDisasterForm","show","onClose","onModalClose","closeButton","getAdminPrivilegeErrorMessage","position","autohide","fade","React","Component"],"mappings":"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","file":"static/js/43.b3232add.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormGroup,\n  CFormText,\n  CInvalidFeedback,\n  CInput,\n  CLabel,\n  CSelect,\n  CRow,\n  CSwitch,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n  CToaster,\n  CToast,\n  CToastHeader,\n  CToastBody\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { getCookieWithKey, USER_ACCESS_TOKEN_KEY, getBackEndHost, getFrontEndHost, isValidGeographicCoordinate, DISASTER_TYPES, getAdminPrivilegeErrorMessage, getAdminPrivilegeWarningMessage } from 'src/Utilities';\n\n\nclass EditDisaster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      informalName: \"\",\n      officialName: \"\",\n      disasterType: \"\",\n      isOngoing: false,\n      latitude: \"\",\n      longitude: \"\",\n\n      isValidInformalName: true,\n      isValidOfficialName: true,\n      isValidDisasterType: true,\n      isValidLatitude: true,\n      isValidLongitude: true,\n\n      isModalOpen: false,\n      authorizationFailure: null, // error code for authorization failure encountered\n      showToast: false,\n    };\n    this.backEndHost = getBackEndHost();\n    this.frontEndHost = getFrontEndHost();\n    this.disasterId = parseInt(this.props.location.search.substring(4));\n    \n    this.originalInformalName = \"\";\n    this.originalOfficialName = \"\";\n    this.originalDisasterType = \"\";\n    this.originalIsOngoing = false;\n    this.originalLatitude = \"\";\n    this.originalLongitude = \"\";\n  }\n\n  componentDidMount() {\n    fetch(`${this.backEndHost}/api/disasters/${this.disasterId}`)\n    .then(response => response.json())\n    .then(result => {\n        this.setState({\n          informalName: result.informal_name,\n          officialName: result.official_name,\n          disasterType: result.disaster_type.charAt(0).toUpperCase() + result.disaster_type.slice(1),\n          isOngoing: result.is_ongoing,\n          latitude: result.location[0].toString(),\n          longitude: result.location[1].toString(),\n        });\n\n        this.originalInformalName = result.informal_name;\n        this.originalOfficialName = result.official_name;\n        this.originalDisasterType = result.disaster_type.charAt(0).toUpperCase() + result.disaster_type.slice(1);\n        this.originalIsOngoing = result.is_ongoing;\n        this.originalLatitude = result.location[0].toString();\n        this.originalLongitude = result.location[1].toString();\n    })\n    .catch(e => {\n        console.log(\"Error fetching disaster with id \", this.disasterId);\n        console.log(e);\n    });\n  }\n\n  onInformalNameChange(evt) {\n    this.setState({ informalName: evt.target.value });\n  }\n\n  onOfficialNameChange(evt) {\n    this.setState({ officialName: evt.target.value });\n  }\n\n  onDisasterTypeChange(evt) {\n    this.setState({ disasterType: evt.target.value });\n  }\n\n  onIsOngoingChange(evt) {\n    this.setState({ isOngoing: !this.state.isOngoing });\n  }\n\n  onLatitudeChange(evt) {\n    this.setState({ latitude: evt.target.value });\n  }\n\n  onLongitudeChange(evt) {\n    this.setState({ longitude: evt.target.value });\n  }\n\n  onSubmit() {\n    let\n      isValidInformalName = true,\n      isValidOfficialName = true,\n      isValidDisasterType = true,\n      isValidLatitude = true,\n      isValidLongitude = true;\n\n    const {informalName, officialName, disasterType, isOngoing, latitude, longitude} = this.state;\n    \n    if (informalName == \"\") {\n      isValidInformalName = false;\n    }\n\n    if (officialName == \"\") {\n      isValidOfficialName = false;\n    }\n\n    if (disasterType == \"Please select\") {\n      isValidDisasterType = false;\n    }\n\n    if (!isValidGeographicCoordinate(latitude)) {\n      isValidLatitude = false;\n    }\n\n    if (!isValidGeographicCoordinate(longitude)) {\n      isValidLongitude = false;\n    }\n\n    if (isValidInformalName && isValidOfficialName && isValidDisasterType && isValidLatitude && isValidLongitude) {\n      const rawBody = { id: this.disasterId };\n      if (informalName.trim() != this.originalInformalName) {\n        rawBody.informal_name = informalName.trim();\n      }\n      if (officialName.trim() != this.originalOfficialName) {\n        rawBody.official_name = officialName.trim();\n      }\n      if (disasterType.trim() != this.originalDisasterType) {\n        rawBody.disaster_type = disasterType.charAt(0).toLowerCase() + disasterType.slice(1);\n      }\n      if (isOngoing != this.originalIsOngoing) {\n        rawBody.is_ongoing = isOngoing;\n      }\n      if (latitude != this.originalLatitude) {\n        rawBody.location_latitude = latitude;\n      }\n      if (longitude != this.originalLongitude) {\n        rawBody.location_longitude = longitude;\n      }\n\n      this.setState({\n        showToast: false,\n      });\n\n      fetch(`${this.backEndHost}/api/disasters`,\n        {\n          method: 'PATCH',\n          body: JSON.stringify(rawBody),\n          contentType: 'application/json',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + getCookieWithKey(USER_ACCESS_TOKEN_KEY),\n          }\n        }\n      )\n      .then(response => response.json())\n      .then(result => {\n        console.log(result);\n        if (result.error == 401 && result.message == \"authorization issue - 401 Unauthorized: \" + \n          \"The server could not verify that you are authorized to access the URL requested. You \" + \n          \"either supplied the wrong credentials (e.g. a bad password), or your browser doesn't \" + \n          \"understand how to supply the credentials required.\" && !result.success) {\n          \n          this.setState({\n            isModalOpen: true,\n            authorizationFailure: 401,\n          });\n\n        } else if (result.error == 403 && result.message == \"authorization incorrect permission \" + \n          \"- 403 Forbidden: You don't have the permission to access the requested resource. It is \" + \n          \"either read-protected or not readable by the server.\" && !result.success) {\n          \n          this.setState({\n            isModalOpen: true,\n            authorizationFailure: 403,\n          });\n        } else {\n          this.originalInformalName = result.informal_name;\n          this.originalOfficialName = result.official_name;\n          this.originalDisasterType = result.disaster_type.charAt(0).toUpperCase() + result.disaster_type.slice(1);\n          this.originalIsOngoing = result.is_ongoing;\n          this.originalLatitude = result.location[0].toString();\n          this.originalLongitude = result.location[1].toString();\n\n          if (!result.error) {\n            this.setState({\n              showToast: true,\n            });\n          }\n        }\n      })\n      .catch(e => {\n          console.log(\"Error fetching disaster with id \", this.disasterId);\n          console.log(e);\n      });\n    }\n\n    this.setState({\n      isValidInformalName,\n      isValidOfficialName,\n      isValidDisasterType,\n      isValidLatitude,\n      isValidLongitude,\n    });\n  }\n\n  resetDisasterForm() {\n    this.setState({\n      informalName: this.originalInformalName,\n      officialName: this.originalOfficialName,\n      disasterType: this.originalDisasterType,\n      isOngoing: this.originalIsOngoing,\n      latitude: this.originalLatitude,\n      longitude: this.originalLongitude,\n      isValidInformalName: true,\n      isValidOfficialName: true,\n      isValidDisasterType: true,\n      isValidLatitude: true,\n      isValidLongitude: true,\n    });\n  }\n\n  onModalClose() {\n    this.setState({\n      isModalOpen: false,\n      authorizationFailure: null,\n    });\n  }\n\n  render() {\n    const {isValidInformalName, isValidOfficialName, isValidDisasterType, isValidLatitude, isValidLongitude, isModalOpen,\n      authorizationFailure, informalName, showToast} = this.state;\n    return (\n      <>\n        <CRow>\n          <CCol xs=\"12\">\n            <CCard>\n              <CCardHeader>\n                <h4>Edit Disaster</h4>\n                <div className=\"top-information-text\">{getAdminPrivilegeWarningMessage(\"edit disaster listings\")}</div>\n              </CCardHeader>\n              <CCardBody>\n                <CForm action=\"\" method=\"post\" encType=\"multipart/form-data\" className=\"form-horizontal\">\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Informal Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {isValidInformalName && <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Text\" value={this.state.informalName} onChange={this.onInformalNameChange.bind(this)}/>}\n                      {!isValidInformalName && <CInput id=\"text-input\" invalid name=\"text-input\" placeholder=\"Text\" value={this.state.informalName} onChange={this.onInformalNameChange.bind(this)}/>}\n                      <CInvalidFeedback>Informal name is blank or format is not recognized</CInvalidFeedback>\n                      <CFormText>The colloquial name of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"text-input\">Official Name</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {isValidOfficialName && <CInput id=\"text-input\" name=\"text-input\" placeholder=\"Text\" value={this.state.officialName} onChange={this.onOfficialNameChange.bind(this)}/>}\n                      {!isValidOfficialName && <CInput id=\"text-input\" invalid name=\"text-input\" placeholder=\"Text\" value={this.state.officialName} onChange={this.onOfficialNameChange.bind(this)}/>}\n                      <CInvalidFeedback>Official name is blank or format is not recognized</CInvalidFeedback>\n                      <CFormText>The identifying name of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"select\">Disaster Type</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {isValidDisasterType && \n                        <CSelect custom name=\"select\" id=\"select\" value={this.state.disasterType} onChange={this.onDisasterTypeChange.bind(this)}>\n                          {DISASTER_TYPES.map(disaster => <option key={disaster} value={disaster}>{disaster}</option>)}\n                        </CSelect>\n                      }\n                      {!isValidDisasterType &&\n                        <CSelect invalid custom name=\"select\" id=\"select\" value={this.state.disasterType} onChange={this.onDisasterTypeChange.bind(this)}>\n                          {EditDisaster.disasterTypes.map(disaster => <option key={disaster} value={disaster}>{disaster}</option>)}\n                        </CSelect>\n                      }\n                      <CInvalidFeedback>No disaster type is selected</CInvalidFeedback>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol tag=\"label\" sm=\"3\" className=\"col-form-label\">\n                      Disaster Ongoing\n                    </CCol>\n                    <CCol sm=\"1\">\n                      <CSwitch\n                        id=\"add-disaster-ongoing-switch\"\n                        className=\"mr-1\"\n                        color=\"danger\"\n                        // defaultChecked\n                        shape=\"pill\"\n                        checked={this.state.isOngoing}\n                        onChange={this.onIsOngoingChange.bind(this)}\n                      />\n                    </CCol>\n                    <CCol sm=\"3\">\n                      <CLabel htmlFor=\"add-disaster-ongoing-switch\">{this.state.isOngoing ? \"Yes\" : \"No\"}</CLabel>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"email-input\">Latitude</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {isValidLatitude && <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Disaster Latitude\" value={this.state.latitude} onChange={this.onLatitudeChange.bind(this)}/>}\n                      {!isValidLatitude && <CInput invalid type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Disaster Latitude\" value={this.state.latitude} onChange={this.onLatitudeChange.bind(this)}/>}\n                      <CInvalidFeedback>Provided latitude is blank or format is not recognized</CInvalidFeedback>\n                      <CFormText className=\"help-block\">The latitude of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                  <CFormGroup row>\n                    <CCol md=\"3\">\n                      <CLabel htmlFor=\"email-input\">Longitude</CLabel>\n                    </CCol>\n                    <CCol xs=\"12\" md=\"9\">\n                      {isValidLongitude && <CInput type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Disaster Latitude\" value={this.state.longitude} onChange={this.onLongitudeChange.bind(this)}/>}\n                      {!isValidLongitude && <CInput invalid type=\"email\" id=\"email-input\" name=\"email-input\" placeholder=\"Disaster Latitude\" value={this.state.longitude} onChange={this.onLongitudeChange.bind(this)}/>}\n                      <CInvalidFeedback>Provided longitude is blank or format is not recognized</CInvalidFeedback>\n                      <CFormText className=\"help-block\">The longitude of the disaster</CFormText>\n                    </CCol>\n                  </CFormGroup>\n                </CForm>\n              </CCardBody>\n              <CCardFooter>\n                <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.onSubmit.bind(this)}><CIcon name=\"cil-scrubber\" /> Submit</CButton>\n                <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.resetDisasterForm.bind(this)}><CIcon name=\"cil-ban\" /> Reset</CButton>\n              </CCardFooter>\n            </CCard>\n          </CCol>\n        </CRow>\n\n        <CModal show={isModalOpen} onClose={this.onModalClose.bind(this)}>\n          <CModalHeader closeButton>\n            <CModalTitle>Failure To Edit Disaster Listing</CModalTitle>\n          </CModalHeader>\n          <CModalBody>\n            {getAdminPrivilegeErrorMessage(\"edit disaster listings\", authorizationFailure)}\n          </CModalBody>\n          <CModalFooter>\n            {/* <CButton onClick={this.onConfirmedDelete.bind(this)} color=\"primary\">Yes, delete it</CButton>{' '} */}\n            <CButton \n              color=\"secondary\" \n              onClick={() => this.onModalClose()}\n            >OK</CButton>\n          </CModalFooter>\n        </CModal>\n\n        <CToaster\n          position={'top-center'}\n          key={'toaster-top-center'}\n        >\n          <CToast\n            key={'toast'}\n            show={showToast}\n            autohide={5000}\n            fade={true}\n          >\n            <CToastHeader closeButton={true}>\n              Disaster Listing Updated\n            </CToastHeader>\n            <CToastBody>\n              {`The disaster listing for ${informalName} has been updated successfully!`}\n            </CToastBody>\n          </CToast>\n        </CToaster>\n      </>\n    );\n  }\n}\n\nexport default EditDisaster;"],"sourceRoot":""}